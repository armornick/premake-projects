# GNU Make solution makefile autogenerated by Premake
# Type "make help" for usage help

ifndef config
  config=release32
endif
export config

PROJECTS := libsqlite3 sqlite3-shell zlib minigzip zlib-example zziplib zzipwrap DynamicLua51 Lua51 lsqlite3 LuaZip

.PHONY: all clean help $(PROJECTS)

all: $(PROJECTS)

libsqlite3: 
	@echo "==== Building libsqlite3 ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f libsqlite3.make

sqlite3-shell: libsqlite3
	@echo "==== Building sqlite3-shell ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f sqlite3-shell.make

zlib: 
	@echo "==== Building zlib ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f zlib.make

minigzip: zlib
	@echo "==== Building minigzip ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f minigzip.make

zlib-example: zlib
	@echo "==== Building zlib-example ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f zlib-example.make

zziplib: zlib
	@echo "==== Building zziplib ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f zziplib.make

zzipwrap: zziplib zlib
	@echo "==== Building zzipwrap ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f zzipwrap.make

DynamicLua51: 
	@echo "==== Building DynamicLua51 ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f DynamicLua51.make

Lua51: DynamicLua51
	@echo "==== Building Lua51 ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f Lua51.make

lsqlite3: DynamicLua51 libsqlite3
	@echo "==== Building lsqlite3 ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f lsqlite3.make

LuaZip: DynamicLua51 zziplib zlib
	@echo "==== Building LuaZip ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f LuaZip.make

clean:
	@${MAKE} --no-print-directory -C . -f libsqlite3.make clean
	@${MAKE} --no-print-directory -C . -f sqlite3-shell.make clean
	@${MAKE} --no-print-directory -C . -f zlib.make clean
	@${MAKE} --no-print-directory -C . -f minigzip.make clean
	@${MAKE} --no-print-directory -C . -f zlib-example.make clean
	@${MAKE} --no-print-directory -C . -f zziplib.make clean
	@${MAKE} --no-print-directory -C . -f zzipwrap.make clean
	@${MAKE} --no-print-directory -C . -f DynamicLua51.make clean
	@${MAKE} --no-print-directory -C . -f Lua51.make clean
	@${MAKE} --no-print-directory -C . -f lsqlite3.make clean
	@${MAKE} --no-print-directory -C . -f LuaZip.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "   release32"
	@echo "   debug32"
	@echo "   release64"
	@echo "   debug64"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   libsqlite3"
	@echo "   sqlite3-shell"
	@echo "   zlib"
	@echo "   minigzip"
	@echo "   zlib-example"
	@echo "   zziplib"
	@echo "   zzipwrap"
	@echo "   DynamicLua51"
	@echo "   Lua51"
	@echo "   lsqlite3"
	@echo "   LuaZip"
	@echo ""
	@echo "For more information, see http://industriousone.com/premake/quick-start"
