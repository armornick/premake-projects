# GNU Make solution makefile autogenerated by Premake
# Type "make help" for usage help

ifndef config
  config=release
endif
export config

PROJECTS := duktape duktape-hello duk uv duv dschema dukluv

.PHONY: all clean help $(PROJECTS)

all: $(PROJECTS)

duktape: 
	@echo "==== Building duktape ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f duktape.make

duktape-hello: duktape
	@echo "==== Building duktape-hello ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f duktape-hello.make

duk: duktape
	@echo "==== Building duk ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f duk.make

uv: 
	@echo "==== Building uv ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f uv.make

duv: 
	@echo "==== Building duv ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f duv.make

dschema: 
	@echo "==== Building dschema ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f dschema.make

dukluv: duv dschema duktape uv
	@echo "==== Building dukluv ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f dukluv.make

clean:
	@${MAKE} --no-print-directory -C . -f duktape.make clean
	@${MAKE} --no-print-directory -C . -f duktape-hello.make clean
	@${MAKE} --no-print-directory -C . -f duk.make clean
	@${MAKE} --no-print-directory -C . -f uv.make clean
	@${MAKE} --no-print-directory -C . -f duv.make clean
	@${MAKE} --no-print-directory -C . -f dschema.make clean
	@${MAKE} --no-print-directory -C . -f dukluv.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "   release"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   duktape"
	@echo "   duktape-hello"
	@echo "   duk"
	@echo "   uv"
	@echo "   duv"
	@echo "   dschema"
	@echo "   dukluv"
	@echo ""
	@echo "For more information, see http://industriousone.com/premake/quick-start"
